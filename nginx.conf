worker_processes 1;

events {
  worker_connections 1024;
}

http {
  include mime.types;
  default_type application/octet-stream;

  # do not copy files into the buffer before sending them
  sendfile on;
  # limit the amount of data transferred in a single "sendfile()" call
  sendfile_max_chunk 1m;
  # send HTTP response headers in one packet right after the "sendfile()" chunk
  tcp_nopush on;

  keepalive_timeout 65;

  gzip on;
  # only "text/html" is compressed by default
  gzip_types text/plain image/svg+xml text/css application/javascript
    text/javascript application/json;
  # by default, responses to requests from proxy servers are not compressed
  # compress responses to requests that will not be cached on the proxy server
  gzip_proxied no-cache no-store private expired auth;
  # set the minimum file size in bytes for compression to apply
  gzip_min_length 1400;

  root ; # path/to/website

  server {
    listen 127.0.0.1:80;

    # remove "index.html" at the end if it follows a slash
    rewrite ^(.*/)index\.html$ $1 permanent;
    # remove the "html" extension
    rewrite ^(.*)\.html$ $1 permanent;
    # remove trailing slashes
    rewrite ^(.*[^/])/+$ $1 permanent;

    # Node app
    location = /message {
      # set the "Host" header to that of the Nginx server
      proxy_set_header Host $host;
      # append the ip of the client
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      # upgrade HTTP
      #proxy_http_version 1.1;
      # upgrade the connection
      #proxy_set_header Upgrade $http_upgrade;
      #proxy_set_header Connection "upgrade";

      proxy_pass ; # http://localhost:<port>
    }

    # static files
    location / {
      try_files $uri $uri.html $uri/index.html =404;

      expires 2d;
      add_header Cache-Control public;
    }

    error_page 404 /404.html;

    # redirect server error pages to the static page /50x.html
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
      root html;
    }
  }
}